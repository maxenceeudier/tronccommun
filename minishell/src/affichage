/****** print parser ******/
/*t_parser *temp = lst_parser;
t_in	*temp_in;
while (temp)
{
	printf("cmd: %s\n", temp->cmd);
	int i = 0;
	printf("arg : ");
	while (temp->arg && temp->arg[i])
		printf("%s ", temp->arg[i++]);
	printf("\nstdin: ");
	temp_in = temp->stdin;
	while (temp_in)
	{
		printf("%d ", temp_in->stdin);
		temp_in = temp_in->next;
	}
	printf("\nstdout: %d\n\n", temp->stdout);
	temp = temp->next;
}*/


/****** print lexer *******/
/*
while (lst_lexer)
{
	char *type;
	type = NULL;
	if (lst_lexer->type == 0)
		type = "PIPE";
	else if (lst_lexer->type == 1)
		type = "REDIR_OUT";
	else if (lst_lexer->type == 2)
	type = "REDIR_IN";
	else if (lst_lexer->type == 3)
		type = "REDIR_OUT_APPEND";
	else if (lst_lexer->type == 4)
		type = "HERDOC";
	else if (lst_lexer->type == 5)
		type = "WRD";
	else if (lst_lexer->type == 6)
		type = "EMPTY";
	printf("%s, type %s\n", lst_lexer->data, type);
	lst_lexer = lst_lexer->next;
}
exit(1);
*/